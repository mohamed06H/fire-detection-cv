name: Deploy Streamlit App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      id: docker_build
      run: |
        docker build -t mohamed06/wf_streamlit .
        docker push mohamed06/wf_streamlit:latest

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Retrieve EC2 Public IP
      id: get_ip
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=streamlit-server-large" --query "Reservations[*].Instances[*].InstanceId" --output text)
        PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

    - name: Update DuckDNS
      run: |
        curl -k "https://www.duckdns.org/update?domains=streamlit-server&token=${{ secrets.DUCKDNS_TOKEN }}&ip=${{ env.PUBLIC_IP }}"


    - name: Set up SSH for deployment
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Deploy to EC2
      env:
        PUBLIC_IP: ${{ env.PUBLIC_IP }}
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ env.PUBLIC_IP }} << 'EOF'
          sudo yum update -y
          sudo yum install -y docker
          sudo systemctl start docker
          sudo usermod -aG docker ec2-user
          sudo systemctl enable docker
        
          # Install Caddy
          sudo curl -fsSL https://caddyserver.com/api/download?os=linux&arch=amd64 | sudo tar xzf - -C /usr/local/bin
        
          # Create Caddyfile
          sudo bash -c 'cat > /etc/caddy/Caddyfile <<EOF
          streamlit-server.duckdns.org {
              reverse_proxy localhost:8501
              log {
                  output file /var/log/caddy/access.log
              }
              tls ${{ secrets.CADDY_EMAIL }}
          }
          EOF'
        
          # Start Caddy
          sudo mkdir -p /etc/caddy
          sudo systemctl start caddy
          sudo systemctl enable caddy
        
          # Pull the latest Docker image and deploy
          sudo docker pull mohamed06/wf_streamlit:latest
          sudo docker stop streamlit-app || true
          sudo docker rm streamlit-app || true
          sudo docker run -d -p 8501:8501 --name streamlit-app mohamed06/wf_streamlit:latest
        EOF
